# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: devmvc
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: products-api-sls
# "service" is the name of this project. This will also be added to your AWS resource names.
service: products-api

resources:
  Resources:
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ProductsTable
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: productID
            AttributeType: S
        KeySchema:
          - AttributeName: productID
            KeyType: HASH

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["ProductsTable", "Arn"] }

functions:
  createProduct:
    handler: src/handlers.createProduct
    events:
      - httpApi:
          path: /product
          method: post

  getProduct:
    handler: src/handlers.getProduct
    events:
      - httpApi:
          path: /product/{id}
          method: get

  updateProduct:
    handler: src/handlers.updateProduct
    events:
      - httpApi:
          path: /product/{id}
          method: put

  deleteProduct:
    handler: src/handlers.deleteProduct
    events:
      - httpApi:
          path: /product/{id}
          method: delete
